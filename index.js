const { vk, getVkNameById, questionManager } = require('./VK')

const { persMenu, check, exchange, donateMenu, profile } = require('./keyboard')

const { User } = require('./db')

const { isNumeric, compareNumeric } = require('./tools')

vk.updates.use(questionManager.middleware);

const QIWI = require("@qiwi/bill-payments-node-js-sdk");
const { api_token } = require('./qiwi')

const { API, resolveResource } = require('vk-io');

const qiwiApi = new QIWI(api_token)

setInterval(async () => {
    let date = new Date()
    console.log(`${date.getDate()}:${date.getHours()}:${date.getMinutes()}`)
    if (`${date.getDate()}:${date.getHours()}:${date.getMinutes()}` == `1:21:35`) {
        console.log(`${date.getDate()}:${date.getHours()}:${date.getMinutes()}`)
        const toppers = await User.find({ topmonth: { $gt: 0 } }).sort({ topmonth: -1 })

        if (toppers[0]) {
            toppers[0].money += 10000000
            await toppers[0].save()
        }
        if (toppers[1]) {
            toppers[1].money += 5000000
            await toppers[1].save()
        }
        if(toppers[2]) {
            toppers[2].money += 2500000
            await toppers[2].save()
        }
        if(toppers[3]) {
            toppers[3].money += 1500000
            await toppers[3].save()
        }
        if(toppers[4]) {
            toppers[4].money += 1000000
            await toppers[4].save()
        }
        if(toppers[5]) {
            toppers[5].money += 750000
            await toppers[5].save()
        }
        if(toppers[6]) {
            toppers[6].money += 500000
            await toppers[6].save()
        }
        if(toppers[7]) {
            toppers[7].money += 250000
            await toppers[7].save()
        }
        if(toppers[8]) {
            toppers[8].money += 100000
            await toppers[8].save()
        }
        if(toppers[9]) {
            toppers[9].money += 50000
            toppers[9].save()
        }

        for (i in toppers) {
            toppers[i].topmonth = 0
            await toppers[i].save()
        }
    }
}, 60000);

setInterval(async () => {
    let date = new Date()
    console.log(`${date.getHours()}:${date.getMinutes()}`)
    if (`${date.getHours()}:${date.getMinutes()}` == `21:35`) {
        console.log(`${date.getHours()}:${date.getMinutes()}`)
        const toppers = await User.find({ topday: { $gt: 0 } }).sort({ topday: -1 })

        if (toppers[0]) {
            toppers[0].money += 1000000
            await toppers[0].save()
        }
        if (toppers[1]) {
            toppers[1].money += 750000
            await toppers[1].save()
        }
        if(toppers[2]) {
            toppers[2].money += 500000
            await toppers[2].save()
        }
        if(toppers[3]) {
            toppers[3].money += 250000
            await toppers[3].save()
        }
        if(toppers[4]) {
            toppers[4].money += 100000
            await toppers[4].save()
        }
        if(toppers[5]) {
            toppers[5].money += 50000
            await toppers[5].save()
        }
        if(toppers[6]) {
            toppers[6].money += 30000
            await toppers[6].save()
        }
        if(toppers[7]) {
            toppers[7].money += 25000
            await toppers[7].save()
        }
        if(toppers[8]) {
            toppers[8].money += 15000
            await toppers[8].save()
        }
        if(toppers[9]) {
            toppers[9].money += 5000
            toppers[9].save()
        }

        for (i in toppers) {
            toppers[i].topday = 0
            toppers[i].save()
        }
    }
}, 60000);

vk.updates.on('message_new', async (msg) => {
    const name = await getVkNameById(msg.senderId)
    const findUser = await User.findOne({ id: msg.senderId });

    const QIWISettings = {
        amount: 0, // –°—É–º–º–∞, –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º null
        billId: "0", // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞ (–æ–Ω —É –∫–∞–∂–¥–æ–≥–æ –±—É–¥–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π)
        comment: "0", // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        currency: "RUB" // –í–∞–ª—é—Ç–∞
    }
    
    if (!msg.isChat) {
        if (!findUser) {

            const newUser = new User({
                id: msg.senderId,
                nick: name,
                money: 200,
            })

            newUser.save((error) => {

                if (error) {
                    return res.statusCode(500).send('Internal Server Error');
                }

            });

            return msg.send(`–ü—Ä–∏–≤–µ—Ç, ${name}, –≤–æ—Ç –º–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:`,
                {
                    keyboard: persMenu
                })
        } else if (findUser) {
            if (msg.text.includes('/–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞')) {
                return msg.send('–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞!',
                    {
                        keyboard: persMenu
                    })
            }
            if (msg.messagePayload.command == 'depositing') { // –¥–æ–Ω–∞—Ç
                let summ = await msg.question(`–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞:`)
                const answerIsNumeric = isNumeric(summ.text)
                if (Number(summ.text) < 0) return msg.send(`–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`)

                if (answerIsNumeric) {
                    QIWISettings.amount = summ.text
                    QIWISettings.billId = qiwiApi.generateId()
                    QIWISettings.comment = "–∫–ª—É–±–Ω–∏—á–∫–∞"
                    findUser.billId = QIWISettings.billId
                    findUser.save()

                    qiwiApi.createBill(QIWISettings.billId, QIWISettings)
                        .then(data => { // –í—ã—Å—Ç–∞–≤–ª—è–µ–º —Å—á–µ—Ç, –ø–µ—Ä–µ–¥–∞–µ–º billId –∏ –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ
                            console.log(QIWISettings.billId)
                            msg.send(`üí∏ –°—É–º–º–∞: ${QIWISettings.amount}\nüëâ –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: ${data.payUrl}\nüëá –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"`,
                                {
                                    keyboard: check
                                })
                        })
                        .catch(err => {
                            console.log(err)
                            return msg.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`)
                        })
                }
            }
            if (msg.messagePayload.command == 'check') {
                qiwiApi.getBillInfo(findUser.billId)
                    .then(data => { // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—á–µ—Ç–µ
                        if (data.status.value == "PAID") {
                            findUser.donate += Number(data.amount.value)
                            findUser.billId = '0'
                            findUser.save()
                            return msg.send(`–í–∞—à –¥–æ–Ω–∞—Ç-—Å—á—ë—Ç –ø–æ–øo–ª–Ω–µ–Ω –Ω–∞ ${data.amount.value}‚ÇΩ`,
                                {
                                    keyboard: persMenu
                                })
                        } else {
                            return msg.send(`–°—á—ë—Ç –Ω–µ –æ–ø–ª–∞—á–µ–Ω.`)
                        }
                    }
                    )
                    .catch(err => {
                        console.log(QIWISettings.billId)
                        return msg.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
                    })
            }
            if (msg.messagePayload.command == 'exit') { // –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                findUser.billId = '0'
                findUser.save()
                return msg.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!`,
                    {
                        keyboard: persMenu
                    })
            }
            if (msg.messagePayload.command == 'myprofile') { // –ø—Ä–æ—Ñ–∏–ª—å
                return msg.send(`–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n–ù–∏–∫: ${findUser.nick}\n–í—ã–∏–≥—Ä–∞–Ω–æ: ${new Intl.NumberFormat('ru-RU').format(findUser.profit)} –ú–ö\n–ò–≥—Ä–æ–≤–æ–π –±–∞–ª–∞–Ω—Å: ${(findUser.stavka == 'none') ? `${new Intl.NumberFormat('ru-RU').format(findUser.money)} –ú–ö` : `–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–ª–∞–Ω—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã —Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç–µ.`}\n–î–æ–Ω–∞—Ç-—Å—á—ë—Ç: ${new Intl.NumberFormat('ru-RU').format(findUser.donate)}‚ÇΩ`,
                    {
                        keyboard: profile
                    })
            }
            if (msg.messagePayload.command == 'changenick') { // —Å–º–µ–Ω–∞ –Ω–∏–∫–∞
                const answer = await msg.question(`‚úè ${name}, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫:`)
                const check = await User.findOne({ nick: answer.text })
                console.log(check)
                if (check) {
                    return msg.send(`–î–∞–Ω–Ω—ã–π –Ω–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç!`)
                }
                findUser.nick = answer.text
                findUser.save()
                return msg.send(`–í–∞—à –Ω–∏–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ${answer.text}!`)
            }
            if (msg.messagePayload.command == 'donate') { // –¥–æ–Ω–∞—Ç –º–µ–Ω—é
                return msg.send(`–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –≤ –¥–æ–Ω–∞—Ç –º–∞–≥–∞–∑–∏–Ω–µ!\n\n–í–∞—à —Å—á—ë—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: ${findUser.donate}‚ÇΩ`,
                    {
                        keyboard: exchange
                    })
            }
            if (msg.messagePayload.command == 'exchange') { // –æ–±–º–µ–Ω –¥–æ–Ω–∞—Ç–∞ –Ω–∞ –±–∞–±–∫–∏
                let answer = await msg.question(`–ö—É—Ä—Å –æ–±–º–µ–Ω–∞ –¥–æ–Ω–∞—Ç-–º–æ–Ω–µ—Ç –Ω–∞ –≤–∞–ª—é—Ç—É –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç (1‚ÇΩ = 1000 –ú–ö)\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å:`)
                const answerIsNumeric = isNumeric(answer.text)
                if (Number(answer.text) < 0) return msg.send(`–û–±–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`)

                if (answerIsNumeric) {
                    if (Number(answer.text) > findUser.donate) return msg.send(`–ù–∞ –¥–æ–Ω–∞—Ç-—Å—á—ë—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!`)

                    findUser.money += answer.text * 1000
                    findUser.donate -= answer.text
                    findUser.save()
                    return msg.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ ${answer.text}‚ÇΩ –Ω–∞ ${new Intl.NumberFormat('ru-RU').format(answer.text * 1000)} –ú–ö`)
                }
            }
            if (msg.messagePayload.command == 'topday') { // —Ç–æ–ø –¥–Ω—è –ø–æ –≤—ã–∏–≥—Ä—ã—à–∞–º
                const toppers = await User.find({ topday: { $gt: 0 } }).sort({ topday: -1 }).limit(10)
                let visual = []
                let pos = 0

                for (i in toppers) {
                    if (!visual.includes(`${toppers[i].nick} - ${toppers[i].topday} –ú–ö`)) {
                        visual.push(`${pos += 1}. [vk.com/id${toppers[i].id}|${toppers[i].nick}] - ${new Intl.NumberFormat('ru-RU').format(toppers[i].topday)} –ú–ö ${(pos == 1) ? `(–ø—Ä–∏–∑ - 1.000.000 –ú–ö).` : (pos == 2) ? `(–ø—Ä–∏–∑ - 750.000 –ú–ö).` : (pos == 3) ? `(–ø—Ä–∏–∑ - 500.000 –ú–ö).` : (pos == 4) ? `(–ø—Ä–∏–∑ - 250.000 –ú–ö).` : (pos == 5) ? `(–ø—Ä–∏–∑ - 100.000 –ú–ö).` : (pos == 6) ? `(–ø—Ä–∏–∑ - 50.000 –ú–ö).` : (pos == 7) ? `(–ø—Ä–∏–∑ - 30.000 –ú–ö).` : (pos == 8) ? `(–ø—Ä–∏–∑ - 25.000 –ú–ö).` : (pos == 9) ? `(–ø—Ä–∏–∑ - 15.000 –ú–ö).` : (pos == 10) ? `(–ø—Ä–∏–∑ - 5.000 –ú–ö).` : ''}`)
                    }
                }

                return msg.send(`–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:\n\n${visual.join(`\n`)}\n\n–í–∞—à –≤—ã–∏–≥—Ä—ã—à –∑–∞ —Å–µ–≥–æ–¥–Ω—è: ${new Intl.NumberFormat('ru-RU').format(findUser.topday)} –ú–ö`)
            }
            if (msg.messagePayload.command == 'topmonth') { // —Ç–æ–ø –º–µ—Å—è—Ü–∞ –ø–æ –≤—ã–∏–≥—Ä—ã—à–∞–º
                const toppers = await User.find({ topmonth: { $gt: 0 } }).sort({ topmonth: -1 }).limit(10)
                let visual = []
                let pos = 0

                for (i in toppers) {
                    if (!visual.includes(`${toppers[i].nick} - ${toppers[i].topmonth} –ú–ö`)) {
                        visual.push(`${pos += 1}. [vk.com/id${toppers[i].id}|${toppers[i].nick}] - ${new Intl.NumberFormat('ru-RU').format(toppers[i].topmonth)} –ú–ö ${(pos == 1) ? `(–ø—Ä–∏–∑ - 10.000.000 –ú–ö).` : (pos == 2) ? `(–ø—Ä–∏–∑ - 5.000.000 –ú–ö).` : (pos == 3) ? `(–ø—Ä–∏–∑ - 2.500.000 –ú–ö).` : (pos == 4) ? `(–ø—Ä–∏–∑ - 1.500.000 –ú–ö).` : (pos == 5) ? `(–ø—Ä–∏–∑ - 1.000.000 –ú–ö).` : (pos == 6) ? `(–ø—Ä–∏–∑ - 750.000 –ú–ö).` : (pos == 7) ? `(–ø—Ä–∏–∑ - 500.000 –ú–ö).` : (pos == 8) ? `(–ø—Ä–∏–∑ - 250.000 –ú–ö).` : (pos == 9) ? `(–ø—Ä–∏–∑ - 100.000 –ú–ö).` : (pos == 10) ? `(–ø—Ä–∏–∑ - 50.000 –ú–ö).` : ''}`)
                    }
                }

                return msg.send(`–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:\n\n${visual.join(`\n`)}\n\n–í–∞—à –≤—ã–∏–≥—Ä—ã—à –∑–∞ –º–µ—Å—è—Ü: ${new Intl.NumberFormat('ru-RU').format(findUser.topmonth)} –ú–ö.`)
            }
            if (msg.messagePayload.command == 'transfer') { // –ø–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥
                const id = await msg.question(`‚úè ${name}, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥:`)

                const resource = await resolveResource({
                    api: vk.api,
                    resource: id.text
                })
                    .then(async function (res) {
                        const getter = await User.findOne({ id: res.id })
                        if (!getter) {
                            return msg.send(`–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!`)
                        } else {
                            const sum = await msg.question(`‚úè –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏:`)
                            const answerIsNumeric = isNumeric(sum.text)
                            if (Number(sum.text) < 0) return msg.send(`–ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`)
                            if (Number(sum.text) > findUser.money) return msg.send(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Ç–∞–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞!`)

                            else if (answerIsNumeric) {
                                getter.money += Number(sum.text)
                                getter.save()
                                findUser.money -= Number(sum.text)
                                findUser.save()

                                msg.send(`–í–∞–º –ø–æ—Å—Ç—É–ø–∏–ª –ø–µ—Ä–µ–≤–æ–¥ –æ—Ç [vk.com/id${findUser.id}|${findUser.nick}] –≤ —Ä–∞–∑–º–µ—Ä–µ ${new Intl.NumberFormat('ru-RU').format(sum.text)} –ú–ö.`, { user_id: res.id })
                                return msg.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ ${new Intl.NumberFormat('ru-RU').format(sum.text)} –ú–ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [vk.com/id${getter.id}|${getter.nick}].`)
                            }

                        }
                    })
                    .catch(err => {
                        console.log(err)
                        return msg.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–π–¥–∏.`)
                    })
            }
        }
    }
})

console.log('–ë–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω!');
vk.updates.start().catch(console.error);